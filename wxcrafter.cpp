//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: wxcrafter.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "wxcrafter.h"


// Declare the bitmap loading function
extern void wxC9ED9InitBitmapResources();

static bool bBitmapLoaded = false;


MainFrameBaseClass::MainFrameBaseClass(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxFrame(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxC9ED9InitBitmapResources();
        bBitmapLoaded = true;
    }
    
    wxBoxSizer* boxSizer213 = new wxBoxSizer(wxVERTICAL);
    this->SetSizer(boxSizer213);
    
    wxBoxSizer* boxSizer265 = new wxBoxSizer(wxHORIZONTAL);
    
    boxSizer213->Add(boxSizer265, 0, wxALL, 5);
    
    wxBoxSizer* boxSizer263 = new wxBoxSizer(wxVERTICAL);
    
    boxSizer265->Add(boxSizer263, 0, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_TOP, 5);
    
    m_SelectionPanel = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxTAB_TRAVERSAL);
    m_SelectionPanel->SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    m_SelectionPanel->SetForegroundColour(wxColour(wxT("rgb(2,11,26)")));
    
    boxSizer263->Add(m_SelectionPanel, 0, wxRIGHT|wxTOP|wxBOTTOM|wxALIGN_LEFT|wxALIGN_TOP, 5);
    
    wxBoxSizer* boxSizer15 = new wxBoxSizer(wxVERTICAL);
    m_SelectionPanel->SetSizer(boxSizer15);
    
    wxArrayString m_PlaneSelectorArr;
    m_PlaneSelector = new wxListBox(m_SelectionPanel, wxID_ANY, wxDefaultPosition, wxSize(290,200), m_PlaneSelectorArr, wxLB_ALWAYS_SB|wxLB_SINGLE);
    m_PlaneSelector->SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    m_PlaneSelector->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_PlaneSelectorFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_PlaneSelector->SetFont(m_PlaneSelectorFont);
    
    boxSizer15->Add(m_PlaneSelector, 0, wxALL|wxALIGN_CENTER_HORIZONTAL, 5);
    
    wxBoxSizer* boxSizer35 = new wxBoxSizer(wxHORIZONTAL);
    
    boxSizer15->Add(boxSizer35, 1, wxALL|wxEXPAND, 5);
    
    wxBoxSizer* boxSizer57 = new wxBoxSizer(wxVERTICAL);
    
    boxSizer35->Add(boxSizer57, 1, wxALL|wxEXPAND|wxALIGN_CENTER|wxALIGN_CENTER_VERTICAL, 5);
    
    m_ShowEvent = new wxCheckBox(m_SelectionPanel, wxID_ANY, _("Special Planes"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_ShowEvent->SetValue(true);
    m_ShowEvent->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_ShowEventFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_ShowEvent->SetFont(m_ShowEventFont);
    
    boxSizer57->Add(m_ShowEvent, 0, wxALL|wxALIGN_CENTER, 5);
    
    m_ShowNonEvent = new wxCheckBox(m_SelectionPanel, wxID_ANY, _("Normal Planes"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_ShowNonEvent->SetValue(true);
    m_ShowNonEvent->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_ShowNonEventFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_ShowNonEvent->SetFont(m_ShowNonEventFont);
    
    boxSizer57->Add(m_ShowNonEvent, 0, wxALL|wxALIGN_CENTER, 5);
    
    wxBoxSizer* boxSizer116 = new wxBoxSizer(wxVERTICAL);
    
    boxSizer35->Add(boxSizer116, 0, wxALL, 5);
    
    wxBoxSizer* boxSizer222 = new wxBoxSizer(wxHORIZONTAL);
    
    boxSizer116->Add(boxSizer222, 0, wxALL, 5);
    
    m_Descending = new wxRadioButton(m_SelectionPanel, wxID_ANY, wxT(""), wxDefaultPosition, wxSize(-1,-1), wxRB_SINGLE);
    m_Descending->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_DescendingFont(9, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, false, wxT("Segoe UI"));
    m_Descending->SetFont(m_DescendingFont);
    m_Descending->SetValue(1);
    
    boxSizer222->Add(m_Descending, 0, wxALIGN_CENTER_VERTICAL, 5);
    
    m_descending = new wxStaticText(m_SelectionPanel, wxID_ANY, _("Descending"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_descending->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_descendingFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_descending->SetFont(m_descendingFont);
    
    boxSizer222->Add(m_descending, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 5);
    
    wxBoxSizer* boxSizer225 = new wxBoxSizer(wxHORIZONTAL);
    
    boxSizer116->Add(boxSizer225, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5);
    
    m_Ascending = new wxRadioButton(m_SelectionPanel, wxID_ANY, wxT(""), wxDefaultPosition, wxSize(-1,-1), wxRB_SINGLE);
    wxFont m_AscendingFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_Ascending->SetFont(m_AscendingFont);
    m_Ascending->SetValue(0);
    
    boxSizer225->Add(m_Ascending, 0, wxALIGN_CENTER_VERTICAL, 5);
    
    m_ascending = new wxStaticText(m_SelectionPanel, wxID_ANY, _("Ascending"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_ascending->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_ascendingFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_ascending->SetFont(m_ascendingFont);
    
    boxSizer225->Add(m_ascending, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 5);
    
    wxArrayString m_FilterOptionSelectorArr;
    m_FilterOptionSelectorArr.Add(wxT("None"));
    m_FilterOptionSelector = new wxChoice(m_SelectionPanel, wxID_ANY, wxDefaultPosition, wxSize(100,-1), m_FilterOptionSelectorArr, 0);
    m_FilterOptionSelector->SetSelection(0);
    
    boxSizer15->Add(m_FilterOptionSelector, 0, wxALL|wxALIGN_CENTER, 5);
    
    wxArrayString m_FilterOptionSubSelectorArr;
    m_FilterOptionSubSelectorArr.Add(wxT("None"));
    m_FilterOptionSubSelector = new wxChoice(m_SelectionPanel, wxID_ANY, wxDefaultPosition, wxSize(200,-1), m_FilterOptionSubSelectorArr, 0);
    m_FilterOptionSubSelector->SetSelection(0);
    
    boxSizer15->Add(m_FilterOptionSubSelector, 0, wxALL|wxALIGN_CENTER, 5);
    
    wxBoxSizer* boxSizer251 = new wxBoxSizer(wxHORIZONTAL);
    
    boxSizer15->Add(boxSizer251, 0, wxALL|wxALIGN_CENTER_HORIZONTAL, 5);
    
    m_level1 = new wxStaticText(m_SelectionPanel, wxID_ANY, _("Level:"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_level1->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_level1Font = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_level1->SetFont(m_level1Font);
    
    boxSizer251->Add(m_level1, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5);
    
    m_FilterLevel = new wxSpinCtrl(m_SelectionPanel, wxID_ANY, wxT("15"), wxDefaultPosition, wxSize(50,-1), wxSP_ARROW_KEYS);
    m_FilterLevel->SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    m_FilterLevel->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_FilterLevelFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_FilterLevel->SetFont(m_FilterLevelFont);
    m_FilterLevel->SetRange(1, 15);
    m_FilterLevel->SetValue(15);
    
    boxSizer251->Add(m_FilterLevel, 0, wxALL|wxALIGN_CENTER_HORIZONTAL, 5);
    
    m_Tree = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxSize(-1,190), wxTAB_TRAVERSAL);
    m_Tree->SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    
    boxSizer263->Add(m_Tree, 0, wxRIGHT|wxTOP|wxBOTTOM|wxEXPAND|wxALIGN_LEFT|wxALIGN_TOP, 5);
    
    wxGridSizer* gridSizer259 = new wxGridSizer(1, 1, 0, 0);
    m_Tree->SetSizer(gridSizer259);
    
    m_TreeSelector = new wxTreeCtrl(m_Tree, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxTR_DEFAULT_STYLE|wxTR_SINGLE|wxTR_ROW_LINES|wxTR_HIDE_ROOT);
    m_TreeSelector->SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    m_TreeSelector->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_TreeSelectorFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_TreeSelector->SetFont(m_TreeSelectorFont);
    
    gridSizer259->Add(m_TreeSelector, 0, wxALL|wxEXPAND|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 5);
    
    wxBoxSizer* boxSizer264 = new wxBoxSizer(wxVERTICAL);
    
    boxSizer265->Add(boxSizer264, 0, wxALL, 5);
    
    m_MainPlaneDisplay = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxSize(340,-1), wxTAB_TRAVERSAL);
    m_MainPlaneDisplay->SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    
    boxSizer264->Add(m_MainPlaneDisplay, 0, wxRIGHT|wxTOP|wxBOTTOM, 5);
    
    wxGridSizer* gridSizer48 = new wxGridSizer(0, 2, 0, 100);
    m_MainPlaneDisplay->SetSizer(gridSizer48);
    
    m_PlaneName = new wxStaticText(m_MainPlaneDisplay, wxID_ANY, _("[ None ]"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_PlaneName->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_PlaneNameFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_PlaneName->SetFont(m_PlaneNameFont);
    
    gridSizer48->Add(m_PlaneName, 0, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 5);
    
    wxBoxSizer* boxSizer123 = new wxBoxSizer(wxHORIZONTAL);
    
    gridSizer48->Add(boxSizer123, 0, wxTOP|wxBOTTOM, 5);
    
    m_level2 = new wxStaticText(m_MainPlaneDisplay, wxID_ANY, _("Level"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_level2->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_level2Font = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_level2->SetFont(m_level2Font);
    
    boxSizer123->Add(m_level2, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
    
    m_LevelSelector = new wxSpinCtrl(m_MainPlaneDisplay, wxID_ANY, wxT("0"), wxDefaultPosition, wxSize(50,-1), wxSP_ARROW_KEYS);
    m_LevelSelector->SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    m_LevelSelector->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_LevelSelectorFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_LevelSelector->SetFont(m_LevelSelectorFont);
    m_LevelSelector->SetRange(1, 10);
    m_LevelSelector->SetValue(1);
    
    boxSizer123->Add(m_LevelSelector, 0, wxALIGN_CENTER_VERTICAL, 5);
    
    wxBoxSizer* boxSizer113 = new wxBoxSizer(wxHORIZONTAL);
    
    gridSizer48->Add(boxSizer113, 0, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 5);
    
    m_cst = new wxStaticText(m_MainPlaneDisplay, wxID_ANY, _("Cst:"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_cst->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_cstFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_cst->SetFont(m_cstFont);
    
    boxSizer113->Add(m_cst, 0, wxALIGN_LEFT, 5);
    
    m_Cst = new wxStaticText(m_MainPlaneDisplay, wxID_ANY, _("0"), wxDefaultPosition, wxSize(100,-1), 0);
    m_Cst->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_CstFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_Cst->SetFont(m_CstFont);
    
    boxSizer113->Add(m_Cst, 0, 0, 5);
    
    wxBoxSizer* boxSizer110 = new wxBoxSizer(wxHORIZONTAL);
    
    gridSizer48->Add(boxSizer110, 0, wxLEFT|wxTOP|wxBOTTOM|wxALIGN_LEFT, 5);
    
    m_cost = new wxStaticText(m_MainPlaneDisplay, wxID_ANY, _("Cost:"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_cost->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_costFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_cost->SetFont(m_costFont);
    
    boxSizer110->Add(m_cost, 0, wxALIGN_CENTER_HORIZONTAL, 5);
    
    m_Cost = new wxStaticText(m_MainPlaneDisplay, wxID_ANY, _("0"), wxDefaultPosition, wxSize(100,-1), 0);
    m_Cost->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_CostFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_Cost->SetFont(m_CostFont);
    
    boxSizer110->Add(m_Cost, 0, 0, 5);
    
    m_StatDisplay = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxTAB_TRAVERSAL);
    m_StatDisplay->SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    wxFont m_StatDisplayFont = wxSystemSettings::GetFont(wxSYS_SYSTEM_FONT);
    m_StatDisplay->SetFont(m_StatDisplayFont);
    
    boxSizer264->Add(m_StatDisplay, 0, wxRIGHT|wxTOP|wxBOTTOM, 5);
    
    wxBoxSizer* boxSizer63 = new wxBoxSizer(wxVERTICAL);
    m_StatDisplay->SetSizer(boxSizer63);
    
    m_statistics = new wxStaticText(m_StatDisplay, wxID_ANY, _("[ STATISTICS ]"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_statistics->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_statisticsFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_statistics->SetFont(m_statisticsFont);
    
    boxSizer63->Add(m_statistics, 0, wxALL, 5);
    
    wxGridSizer* gridSizer65 = new wxGridSizer(0, 2, 0, -65);
    
    boxSizer63->Add(gridSizer65, 1, wxALL|wxEXPAND, 5);
    
    m_speed = new wxStaticText(m_StatDisplay, wxID_ANY, _("SPEED"), wxDefaultPosition, wxSize(-1,-1), wxALIGN_LEFT);
    m_speed->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_speedFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_speed->SetFont(m_speedFont);
    
    gridSizer65->Add(m_speed, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5);
    
    wxBoxSizer* boxSizer102 = new wxBoxSizer(wxHORIZONTAL);
    
    gridSizer65->Add(boxSizer102, 0, wxALL, 5);
    
    m_SpeedGrade = new wxStaticText(m_StatDisplay, wxID_ANY, _("F-"), wxDefaultPosition, wxSize(18,18), wxST_NO_AUTORESIZE|wxALIGN_CENTRE);
    m_SpeedGrade->SetBackgroundColour(wxColour(wxT("rgb(153,172,202)")));
    m_SpeedGrade->SetForegroundColour(wxColour(wxT("rgb(82,104,127)")));
    wxFont m_SpeedGradeFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_SpeedGrade->SetFont(m_SpeedGradeFont);
    
    boxSizer102->Add(m_SpeedGrade, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5);
    
    m_SpeedBar = new wxPanel(m_StatDisplay, wxID_ANY, wxDefaultPosition, wxSize(150,15), wxTAB_TRAVERSAL);
    
    boxSizer102->Add(m_SpeedBar, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5);
    
    m_mobility = new wxStaticText(m_StatDisplay, wxID_ANY, _("MOBILITY"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_mobility->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_mobilityFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_mobility->SetFont(m_mobilityFont);
    
    gridSizer65->Add(m_mobility, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5);
    
    wxBoxSizer* boxSizer103 = new wxBoxSizer(wxHORIZONTAL);
    
    gridSizer65->Add(boxSizer103, 0, wxALL, 5);
    
    m_MobilityGrade = new wxStaticText(m_StatDisplay, wxID_ANY, _("F-"), wxDefaultPosition, wxSize(18,18), wxST_NO_AUTORESIZE|wxALIGN_CENTRE);
    m_MobilityGrade->SetBackgroundColour(wxColour(wxT("rgb(153,172,202)")));
    m_MobilityGrade->SetForegroundColour(wxColour(wxT("rgb(82,104,127)")));
    wxFont m_MobilityGradeFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_MobilityGrade->SetFont(m_MobilityGradeFont);
    
    boxSizer103->Add(m_MobilityGrade, 0, wxALL, 5);
    
    m_MobilityBar = new wxPanel(m_StatDisplay, wxID_ANY, wxDefaultPosition, wxSize(150,15), wxTAB_TRAVERSAL);
    
    boxSizer103->Add(m_MobilityBar, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5);
    
    m_stability = new wxStaticText(m_StatDisplay, wxID_ANY, _("STABILITY"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_stability->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_stabilityFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_stability->SetFont(m_stabilityFont);
    
    gridSizer65->Add(m_stability, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5);
    
    wxBoxSizer* boxSizer104 = new wxBoxSizer(wxHORIZONTAL);
    
    gridSizer65->Add(boxSizer104, 0, wxALL, 5);
    
    m_StabilityGrade = new wxStaticText(m_StatDisplay, wxID_ANY, _("F-"), wxDefaultPosition, wxSize(18,18), wxST_NO_AUTORESIZE|wxALIGN_CENTRE);
    m_StabilityGrade->SetBackgroundColour(wxColour(wxT("rgb(153,172,202)")));
    m_StabilityGrade->SetForegroundColour(wxColour(wxT("rgb(82,104,127)")));
    wxFont m_StabilityGradeFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_StabilityGrade->SetFont(m_StabilityGradeFont);
    
    boxSizer104->Add(m_StabilityGrade, 0, wxALL, 5);
    
    m_StabilityBar = new wxPanel(m_StatDisplay, wxID_ANY, wxDefaultPosition, wxSize(150,15), wxTAB_TRAVERSAL);
    
    boxSizer104->Add(m_StabilityBar, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5);
    
    m_aa = new wxStaticText(m_StatDisplay, wxID_ANY, _("ATK DMG (AIR)"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_aa->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_aaFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_aa->SetFont(m_aaFont);
    
    gridSizer65->Add(m_aa, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5);
    
    wxBoxSizer* boxSizer105 = new wxBoxSizer(wxHORIZONTAL);
    
    gridSizer65->Add(boxSizer105, 0, wxALL, 5);
    
    m_AAGrade = new wxStaticText(m_StatDisplay, wxID_ANY, _("F-"), wxDefaultPosition, wxSize(18,18), wxST_NO_AUTORESIZE|wxALIGN_CENTRE);
    m_AAGrade->SetBackgroundColour(wxColour(wxT("rgb(153,172,202)")));
    m_AAGrade->SetForegroundColour(wxColour(wxT("rgb(82,104,127)")));
    wxFont m_AAGradeFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_AAGrade->SetFont(m_AAGradeFont);
    
    boxSizer105->Add(m_AAGrade, 0, wxALL, 5);
    
    m_AABar = new wxPanel(m_StatDisplay, wxID_ANY, wxDefaultPosition, wxSize(150,15), wxTAB_TRAVERSAL);
    
    boxSizer105->Add(m_AABar, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5);
    
    m_ag = new wxStaticText(m_StatDisplay, wxID_ANY, _("ATK DMG (GROUND)"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_ag->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_agFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_ag->SetFont(m_agFont);
    
    gridSizer65->Add(m_ag, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5);
    
    wxBoxSizer* boxSizer106 = new wxBoxSizer(wxHORIZONTAL);
    
    gridSizer65->Add(boxSizer106, 0, wxALL, 5);
    
    m_AGGrade = new wxStaticText(m_StatDisplay, wxID_ANY, _("F-"), wxDefaultPosition, wxSize(18,18), wxST_NO_AUTORESIZE|wxALIGN_CENTRE);
    m_AGGrade->SetBackgroundColour(wxColour(wxT("rgb(153,172,202)")));
    m_AGGrade->SetForegroundColour(wxColour(wxT("rgb(82,104,127)")));
    wxFont m_AGGradeFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_AGGrade->SetFont(m_AGGradeFont);
    
    boxSizer106->Add(m_AGGrade, 0, wxALL, 5);
    
    m_AGBar = new wxPanel(m_StatDisplay, wxID_ANY, wxDefaultPosition, wxSize(150,15), wxTAB_TRAVERSAL);
    
    boxSizer106->Add(m_AGBar, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5);
    
    m_defense = new wxStaticText(m_StatDisplay, wxID_ANY, _("DEFENSE"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_defense->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_defenseFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_defense->SetFont(m_defenseFont);
    
    gridSizer65->Add(m_defense, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5);
    
    wxBoxSizer* boxSizer107 = new wxBoxSizer(wxHORIZONTAL);
    
    gridSizer65->Add(boxSizer107, 0, wxALL, 5);
    
    m_DefenseGrade = new wxStaticText(m_StatDisplay, wxID_ANY, _("F-"), wxDefaultPosition, wxSize(18,18), wxST_NO_AUTORESIZE|wxALIGN_CENTRE);
    m_DefenseGrade->SetBackgroundColour(wxColour(wxT("rgb(153,172,202)")));
    m_DefenseGrade->SetForegroundColour(wxColour(wxT("rgb(82,104,127)")));
    wxFont m_DefenseGradeFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_DefenseGrade->SetFont(m_DefenseGradeFont);
    
    boxSizer107->Add(m_DefenseGrade, 0, wxALL, 5);
    
    m_DefenseBar = new wxPanel(m_StatDisplay, wxID_ANY, wxDefaultPosition, wxSize(150,15), wxTAB_TRAVERSAL);
    
    boxSizer107->Add(m_DefenseBar, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5);
    
    m_Parts = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxTAB_TRAVERSAL);
    m_Parts->SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    
    boxSizer264->Add(m_Parts, 0, wxRIGHT|wxTOP|wxBOTTOM, 5);
    
    wxBoxSizer* boxSizer131 = new wxBoxSizer(wxVERTICAL);
    m_Parts->SetSizer(boxSizer131);
    
    m_parts = new wxStaticText(m_Parts, wxID_ANY, _("[ PARTS ]"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_parts->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_partsFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_parts->SetFont(m_partsFont);
    
    boxSizer131->Add(m_parts, 0, wxALL, 5);
    
    wxGridSizer* gridSizer1411 = new wxGridSizer(0, 2, 0, -100);
    
    boxSizer131->Add(gridSizer1411, 1, wxALL|wxEXPAND|wxALIGN_LEFT, 5);
    
    m_body = new wxStaticText(m_Parts, wxID_ANY, _("BODY"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_body->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_bodyFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_body->SetFont(m_bodyFont);
    
    gridSizer1411->Add(m_body, 0, wxALL|wxALIGN_LEFT|wxALIGN_TOP, 5);
    
    wxBoxSizer* boxSizer206 = new wxBoxSizer(wxHORIZONTAL);
    
    gridSizer1411->Add(boxSizer206, 0, wxALIGN_LEFT|wxALIGN_TOP, 5);
    
    m_BODYSlots = new wxStaticText(m_Parts, wxID_ANY, _("0"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_BODYSlots->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_BODYSlotsFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_BODYSlots->SetFont(m_BODYSlotsFont);
    
    boxSizer206->Add(m_BODYSlots, 0, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 5);
    
    m_BODYBar = new wxPanel(m_Parts, wxID_ANY, wxDefaultPosition, wxSize(178,16), wxTAB_TRAVERSAL);
    
    boxSizer206->Add(m_BODYBar, 0, wxALL, 5);
    
    m_arms = new wxStaticText(m_Parts, wxID_ANY, _("ARMS"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_arms->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_armsFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_arms->SetFont(m_armsFont);
    
    gridSizer1411->Add(m_arms, 0, wxALL, 5);
    
    wxBoxSizer* boxSizer207 = new wxBoxSizer(wxHORIZONTAL);
    
    gridSizer1411->Add(boxSizer207, 0, wxALIGN_LEFT|wxALIGN_TOP, 5);
    
    m_ARMSSlots = new wxStaticText(m_Parts, wxID_ANY, _("0"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_ARMSSlots->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_ARMSSlotsFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_ARMSSlots->SetFont(m_ARMSSlotsFont);
    
    boxSizer207->Add(m_ARMSSlots, 0, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 5);
    
    m_ARMSBar = new wxPanel(m_Parts, wxID_ANY, wxDefaultPosition, wxSize(178,16), wxTAB_TRAVERSAL);
    
    boxSizer207->Add(m_ARMSBar, 0, wxALL, 5);
    
    m_misc = new wxStaticText(m_Parts, wxID_ANY, _("MISC"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_misc->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_miscFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_misc->SetFont(m_miscFont);
    
    gridSizer1411->Add(m_misc, 0, wxALL, 5);
    
    wxBoxSizer* boxSizer208 = new wxBoxSizer(wxHORIZONTAL);
    
    gridSizer1411->Add(boxSizer208, 0, wxALIGN_LEFT|wxALIGN_TOP, 5);
    
    m_MISCSlots = new wxStaticText(m_Parts, wxID_ANY, _("0"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_MISCSlots->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_MISCSlotsFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_MISCSlots->SetFont(m_MISCSlotsFont);
    
    boxSizer208->Add(m_MISCSlots, 0, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 5);
    
    m_MISCBar = new wxPanel(m_Parts, wxID_ANY, wxDefaultPosition, wxSize(178,16), wxTAB_TRAVERSAL);
    
    boxSizer208->Add(m_MISCBar, 0, wxALL, 5);
    
    m_Weapons = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxTAB_TRAVERSAL);
    m_Weapons->SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    
    boxSizer264->Add(m_Weapons, 0, wxRIGHT|wxTOP|wxBOTTOM, 5);
    
    wxBoxSizer* boxSizer163 = new wxBoxSizer(wxVERTICAL);
    m_Weapons->SetSizer(boxSizer163);
    
    m_weapons = new wxStaticText(m_Weapons, wxID_ANY, _("[ WEAPONS ]"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_weapons->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_weaponsFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_weapons->SetFont(m_weaponsFont);
    
    boxSizer163->Add(m_weapons, 0, wxALL, 5);
    
    wxBoxSizer* boxSizer168 = new wxBoxSizer(wxHORIZONTAL);
    
    boxSizer163->Add(boxSizer168, 1, wxALL|wxEXPAND, 5);
    
    wxBoxSizer* boxSizer170 = new wxBoxSizer(wxVERTICAL);
    
    boxSizer168->Add(boxSizer170, 1, wxALL|wxEXPAND, 5);
    
    wxGridSizer* gridSizer205 = new wxGridSizer(3, 3, 0, 0);
    
    boxSizer170->Add(gridSizer205, 1, wxALL|wxEXPAND, 5);
    
    m_GUN = new wxStaticText(m_Weapons, wxID_ANY, _("GUN"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_GUN->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_GUNFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_GUN->SetFont(m_GUNFont);
    
    gridSizer205->Add(m_GUN, 0, wxALL|wxALIGN_RIGHT, 5);
    
    m_staticText17811 = new wxStaticText(m_Weapons, wxID_ANY, _(":"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_staticText17811->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_staticText17811Font = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_staticText17811->SetFont(m_staticText17811Font);
    
    gridSizer205->Add(m_staticText17811, 0, wxALL|wxALIGN_CENTER_HORIZONTAL, 5);
    
    m_GUNAmmo = new wxStaticText(m_Weapons, wxID_ANY, _("0"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_GUNAmmo->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_GUNAmmoFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_GUNAmmo->SetFont(m_GUNAmmoFont);
    
    gridSizer205->Add(m_GUNAmmo, 0, wxALL|wxALIGN_LEFT, 5);
    
    m_MSL = new wxStaticText(m_Weapons, wxID_ANY, _("MSL"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_MSL->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_MSLFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_MSL->SetFont(m_MSLFont);
    
    gridSizer205->Add(m_MSL, 0, wxALL|wxALIGN_RIGHT, 5);
    
    m_staticText178 = new wxStaticText(m_Weapons, wxID_ANY, _(":"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_staticText178->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_staticText178Font = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_staticText178->SetFont(m_staticText178Font);
    
    gridSizer205->Add(m_staticText178, 0, wxALL|wxALIGN_CENTER_HORIZONTAL, 5);
    
    m_MSLAmmo = new wxStaticText(m_Weapons, wxID_ANY, _("0"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_MSLAmmo->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_MSLAmmoFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_MSLAmmo->SetFont(m_MSLAmmoFont);
    
    gridSizer205->Add(m_MSLAmmo, 0, wxALL|wxALIGN_LEFT, 5);
    
    wxBoxSizer* boxSizer172 = new wxBoxSizer(wxVERTICAL);
    
    boxSizer168->Add(boxSizer172, 1, wxALL|wxEXPAND, 5);
    
    wxGridSizer* gridSizer204 = new wxGridSizer(0, 3, 0, 0);
    
    boxSizer172->Add(gridSizer204, 1, wxALL|wxEXPAND, 5);
    
    m_SPW1Name = new wxStaticText(m_Weapons, wxID_ANY, _("N/A"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_SPW1Name->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_SPW1NameFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_SPW1Name->SetFont(m_SPW1NameFont);
    
    gridSizer204->Add(m_SPW1Name, 0, wxALL|wxALIGN_RIGHT, 5);
    
    m_staticText192 = new wxStaticText(m_Weapons, wxID_ANY, _(":"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_staticText192->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_staticText192Font = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_staticText192->SetFont(m_staticText192Font);
    
    gridSizer204->Add(m_staticText192, 0, wxALL|wxALIGN_CENTER_HORIZONTAL, 5);
    
    m_SPW1Ammo = new wxStaticText(m_Weapons, wxID_ANY, _("0"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_SPW1Ammo->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_SPW1AmmoFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_SPW1Ammo->SetFont(m_SPW1AmmoFont);
    
    gridSizer204->Add(m_SPW1Ammo, 0, wxALL|wxALIGN_LEFT, 5);
    
    m_SPW2Name = new wxStaticText(m_Weapons, wxID_ANY, _("N/A"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_SPW2Name->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_SPW2NameFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_SPW2Name->SetFont(m_SPW2NameFont);
    
    gridSizer204->Add(m_SPW2Name, 0, wxALL|wxALIGN_RIGHT, 5);
    
    m_staticText19215 = new wxStaticText(m_Weapons, wxID_ANY, _(":"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_staticText19215->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_staticText19215Font = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_staticText19215->SetFont(m_staticText19215Font);
    
    gridSizer204->Add(m_staticText19215, 0, wxALL|wxALIGN_CENTER_HORIZONTAL, 5);
    
    m_SPW2Ammo = new wxStaticText(m_Weapons, wxID_ANY, _("0"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_SPW2Ammo->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_SPW2AmmoFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_SPW2Ammo->SetFont(m_SPW2AmmoFont);
    
    gridSizer204->Add(m_SPW2Ammo, 0, wxALL|wxALIGN_LEFT, 5);
    
    m_SPW3Name = new wxStaticText(m_Weapons, wxID_ANY, _("N/A"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_SPW3Name->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_SPW3NameFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_SPW3Name->SetFont(m_SPW3NameFont);
    
    gridSizer204->Add(m_SPW3Name, 0, wxALL|wxALIGN_RIGHT, 5);
    
    m_staticText1921519 = new wxStaticText(m_Weapons, wxID_ANY, _(":"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_staticText1921519->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_staticText1921519Font = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_staticText1921519->SetFont(m_staticText1921519Font);
    
    gridSizer204->Add(m_staticText1921519, 0, wxALL|wxALIGN_CENTER_HORIZONTAL, 5);
    
    m_SPW3Ammo = new wxStaticText(m_Weapons, wxID_ANY, _("0"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_SPW3Ammo->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_SPW3AmmoFont = wxSystemSettings::GetFont(wxSYS_OEM_FIXED_FONT);
    m_SPW3Ammo->SetFont(m_SPW3AmmoFont);
    
    gridSizer204->Add(m_SPW3Ammo, 0, wxALL|wxALIGN_LEFT, 5);
    
    m_menuBar = new wxMenuBar(0);
    this->SetMenuBar(m_menuBar);
    
    m_name6 = new wxMenu();
    m_menuBar->Append(m_name6, _("File"));
    
    m_menuItem7 = new wxMenuItem(m_name6, wxID_EXIT, _("Exit\tAlt-X"), _("Quit"), wxITEM_NORMAL);
    m_name6->Append(m_menuItem7);
    
    m_name8 = new wxMenu();
    m_menuBar->Append(m_name8, _("Help"));
    
    m_menuItem9 = new wxMenuItem(m_name8, wxID_ABOUT, _("About..."), wxT(""), wxITEM_NORMAL);
    m_name8->Append(m_menuItem9);
    
    m_mainToolbar = this->CreateToolBar(wxTB_FLAT, wxID_ANY);
    m_mainToolbar->SetToolBitmapSize(wxSize(16,16));
    
    m_FilterToggle = new wxToggleButton(m_mainToolbar, wxID_ANY, _("Toggle Filters"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_FilterToggle->SetValue(false);
    m_mainToolbar->AddControl(m_FilterToggle);
    
    m_SetBuilderOpen = new wxButton(m_mainToolbar, wxID_ANY, _("Set Builder"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_SetBuilderOpen->Enable(false);
    m_mainToolbar->AddControl(m_SetBuilderOpen);
    
    m_TreeOpen = new wxButton(m_mainToolbar, wxID_ANY, _("Research Tree"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_mainToolbar->AddControl(m_TreeOpen);
    
    m_SpecialAircraftOpen = new wxButton(m_mainToolbar, wxID_ANY, _("Special Aircraft"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_mainToolbar->AddControl(m_SpecialAircraftOpen);
    
    m_SpecialWeaponsOpen = new wxButton(m_mainToolbar, wxID_ANY, _("Special Weapons"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_mainToolbar->AddControl(m_SpecialWeaponsOpen);
    m_mainToolbar->Realize();
    
    SetBackgroundColour(wxColour(wxT("rgb(24,47,75)")));
    SetSizeHints(-1,-1);
    if ( GetSizer() ) {
         GetSizer()->Fit(this);
    }
    Centre(wxBOTH);
    // Connect events
    this->Connect(wxEVT_CLOSE_WINDOW, wxCloseEventHandler(MainFrameBaseClass::onClose), NULL, this);
    m_PlaneSelector->Connect(wxEVT_COMMAND_LISTBOX_SELECTED, wxCommandEventHandler(MainFrameBaseClass::onPlaneSelected), NULL, this);
    m_ShowEvent->Connect(wxEVT_COMMAND_CHECKBOX_CLICKED, wxCommandEventHandler(MainFrameBaseClass::onEventSort), NULL, this);
    m_ShowNonEvent->Connect(wxEVT_COMMAND_CHECKBOX_CLICKED, wxCommandEventHandler(MainFrameBaseClass::onNonEventSort), NULL, this);
    m_Descending->Connect(wxEVT_COMMAND_RADIOBUTTON_SELECTED, wxCommandEventHandler(MainFrameBaseClass::onDescendingClicked), NULL, this);
    m_Ascending->Connect(wxEVT_COMMAND_RADIOBUTTON_SELECTED, wxCommandEventHandler(MainFrameBaseClass::onAscendingClicked), NULL, this);
    m_FilterOptionSelector->Connect(wxEVT_COMMAND_CHOICE_SELECTED, wxCommandEventHandler(MainFrameBaseClass::onFilterOptionChanged), NULL, this);
    m_FilterOptionSubSelector->Connect(wxEVT_COMMAND_CHOICE_SELECTED, wxCommandEventHandler(MainFrameBaseClass::onFilterSubOptionChanged), NULL, this);
    m_FilterLevel->Connect(wxEVT_COMMAND_SPINCTRL_UPDATED, wxSpinEventHandler(MainFrameBaseClass::onFilterLevelUpdated), NULL, this);
    m_TreeSelector->Connect(wxEVT_COMMAND_TREE_SEL_CHANGED, wxTreeEventHandler(MainFrameBaseClass::TreeChanged), NULL, this);
    m_TreeSelector->Connect(wxEVT_COMMAND_TREE_SEL_CHANGING, wxTreeEventHandler(MainFrameBaseClass::TreeChanging), NULL, this);
    m_TreeSelector->Connect(wxEVT_COMMAND_TREE_ITEM_COLLAPSING, wxTreeEventHandler(MainFrameBaseClass::CollapseNodes), NULL, this);
    m_LevelSelector->Connect(wxEVT_COMMAND_SPINCTRL_UPDATED, wxSpinEventHandler(MainFrameBaseClass::onLevelChanged), NULL, this);
    this->Connect(m_menuItem7->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(MainFrameBaseClass::OnExit), NULL, this);
    this->Connect(m_menuItem9->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(MainFrameBaseClass::OnAbout), NULL, this);
    m_FilterToggle->Connect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(MainFrameBaseClass::onFilterToggle), NULL, this);
    m_SetBuilderOpen->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(MainFrameBaseClass::onSetBuilderOpen), NULL, this);
    m_TreeOpen->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(MainFrameBaseClass::onTreeOpen), NULL, this);
    m_SpecialAircraftOpen->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(MainFrameBaseClass::onSpecialAircraftOpen), NULL, this);
    m_SpecialWeaponsOpen->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(MainFrameBaseClass::onSpecialWeaponsOpen), NULL, this);
    
}

MainFrameBaseClass::~MainFrameBaseClass()
{
    this->Disconnect(wxEVT_CLOSE_WINDOW, wxCloseEventHandler(MainFrameBaseClass::onClose), NULL, this);
    m_PlaneSelector->Disconnect(wxEVT_COMMAND_LISTBOX_SELECTED, wxCommandEventHandler(MainFrameBaseClass::onPlaneSelected), NULL, this);
    m_ShowEvent->Disconnect(wxEVT_COMMAND_CHECKBOX_CLICKED, wxCommandEventHandler(MainFrameBaseClass::onEventSort), NULL, this);
    m_ShowNonEvent->Disconnect(wxEVT_COMMAND_CHECKBOX_CLICKED, wxCommandEventHandler(MainFrameBaseClass::onNonEventSort), NULL, this);
    m_Descending->Disconnect(wxEVT_COMMAND_RADIOBUTTON_SELECTED, wxCommandEventHandler(MainFrameBaseClass::onDescendingClicked), NULL, this);
    m_Ascending->Disconnect(wxEVT_COMMAND_RADIOBUTTON_SELECTED, wxCommandEventHandler(MainFrameBaseClass::onAscendingClicked), NULL, this);
    m_FilterOptionSelector->Disconnect(wxEVT_COMMAND_CHOICE_SELECTED, wxCommandEventHandler(MainFrameBaseClass::onFilterOptionChanged), NULL, this);
    m_FilterOptionSubSelector->Disconnect(wxEVT_COMMAND_CHOICE_SELECTED, wxCommandEventHandler(MainFrameBaseClass::onFilterSubOptionChanged), NULL, this);
    m_FilterLevel->Disconnect(wxEVT_COMMAND_SPINCTRL_UPDATED, wxSpinEventHandler(MainFrameBaseClass::onFilterLevelUpdated), NULL, this);
    m_TreeSelector->Disconnect(wxEVT_COMMAND_TREE_SEL_CHANGED, wxTreeEventHandler(MainFrameBaseClass::TreeChanged), NULL, this);
    m_TreeSelector->Disconnect(wxEVT_COMMAND_TREE_SEL_CHANGING, wxTreeEventHandler(MainFrameBaseClass::TreeChanging), NULL, this);
    m_TreeSelector->Disconnect(wxEVT_COMMAND_TREE_ITEM_COLLAPSING, wxTreeEventHandler(MainFrameBaseClass::CollapseNodes), NULL, this);
    m_LevelSelector->Disconnect(wxEVT_COMMAND_SPINCTRL_UPDATED, wxSpinEventHandler(MainFrameBaseClass::onLevelChanged), NULL, this);
    this->Disconnect(m_menuItem7->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(MainFrameBaseClass::OnExit), NULL, this);
    this->Disconnect(m_menuItem9->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(MainFrameBaseClass::OnAbout), NULL, this);
    m_FilterToggle->Disconnect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(MainFrameBaseClass::onFilterToggle), NULL, this);
    m_SetBuilderOpen->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(MainFrameBaseClass::onSetBuilderOpen), NULL, this);
    m_TreeOpen->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(MainFrameBaseClass::onTreeOpen), NULL, this);
    m_SpecialAircraftOpen->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(MainFrameBaseClass::onSpecialAircraftOpen), NULL, this);
    m_SpecialWeaponsOpen->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(MainFrameBaseClass::onSpecialWeaponsOpen), NULL, this);
    
}

ResearchTreeBaseClass::ResearchTreeBaseClass(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxFrame(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxC9ED9InitBitmapResources();
        bBitmapLoaded = true;
    }
    
    m_toolbar290 = this->CreateToolBar(wxTB_FLAT, wxID_ANY);
    m_toolbar290->SetToolBitmapSize(wxSize(16,16));
    
    m_zoomin = new wxButton(m_toolbar290, wxID_ANY, _("Zoom In"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_toolbar290->AddControl(m_zoomin);
    
    m_zoomout = new wxButton(m_toolbar290, wxID_ANY, _("Zoom Out"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_toolbar290->AddControl(m_zoomout);
    
    m_savedata = new wxButton(m_toolbar290, wxID_ANY, _("Save Data"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_toolbar290->AddControl(m_savedata);
    
    m_savepng = new wxButton(m_toolbar290, wxID_ANY, _("Save PNG"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_toolbar290->AddControl(m_savepng);
    
    m_editmode = new wxToggleButton(m_toolbar290, wxID_ANY, _("Edit Mode"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_editmode->SetValue(false);
    m_toolbar290->AddControl(m_editmode);
    m_toolbar290->Realize();
    
    SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    SetSizeHints(500,300);
    if ( GetSizer() ) {
         GetSizer()->Fit(this);
    }
    Centre(wxBOTH);
    // Connect events
    this->Connect(wxEVT_CLOSE_WINDOW, wxCloseEventHandler(ResearchTreeBaseClass::onClose), NULL, this);
    m_zoomin->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(ResearchTreeBaseClass::onZoomIn), NULL, this);
    m_zoomout->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(ResearchTreeBaseClass::onZoomOut), NULL, this);
    m_savedata->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(ResearchTreeBaseClass::onSaveData), NULL, this);
    m_savepng->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(ResearchTreeBaseClass::onSavePNG), NULL, this);
    m_editmode->Connect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(ResearchTreeBaseClass::onEdit), NULL, this);
    
}

ResearchTreeBaseClass::~ResearchTreeBaseClass()
{
    this->Disconnect(wxEVT_CLOSE_WINDOW, wxCloseEventHandler(ResearchTreeBaseClass::onClose), NULL, this);
    m_zoomin->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(ResearchTreeBaseClass::onZoomIn), NULL, this);
    m_zoomout->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(ResearchTreeBaseClass::onZoomOut), NULL, this);
    m_savedata->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(ResearchTreeBaseClass::onSaveData), NULL, this);
    m_savepng->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(ResearchTreeBaseClass::onSavePNG), NULL, this);
    m_editmode->Disconnect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(ResearchTreeBaseClass::onEdit), NULL, this);
    
}

SetBuilderBaseClass::SetBuilderBaseClass(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxFrame(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxC9ED9InitBitmapResources();
        bBitmapLoaded = true;
    }
    
    m_toolbar306 = this->CreateToolBar(wxTB_FLAT, wxID_ANY);
    m_toolbar306->SetToolBitmapSize(wxSize(16,16));
    
    m_savedefault = new wxButton(m_toolbar306, wxID_ANY, _("Save as Default"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_toolbar306->AddControl(m_savedefault);
    
    m_clearsets = new wxButton(m_toolbar306, wxID_ANY, _("Clear Sets"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_toolbar306->AddControl(m_clearsets);
    
    m_savepng = new wxButton(m_toolbar306, wxID_ANY, _("Save .PNG"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_toolbar306->AddControl(m_savepng);
    m_toolbar306->Realize();
    
    wxBoxSizer* boxSizer356 = new wxBoxSizer(wxHORIZONTAL);
    this->SetSizer(boxSizer356);
    
    wxBoxSizer* CustomSetSizer = new wxBoxSizer(wxVERTICAL);
    
    boxSizer356->Add(CustomSetSizer, 1, wxALL|wxEXPAND, 5);
    
    m_CustomSet1Border = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxSize(310,145), wxBORDER_NONE);
    m_CustomSet1Border->SetBackgroundColour(wxColour(wxT("rgb(43,134,219)")));
    m_CustomSet1Border->SetForegroundColour(wxColour(wxT("rgb(43,134,219)")));
    
    CustomSetSizer->Add(m_CustomSet1Border, 0, wxALL, 0);
    
    wxBoxSizer* boxSizer398 = new wxBoxSizer(wxVERTICAL);
    m_CustomSet1Border->SetSizer(boxSizer398);
    
    m_CustomSet1 = new SetPanel(m_CustomSet1Border, wxID_ANY, wxDefaultPosition, wxSize(300,135), wxBORDER_SIMPLE);
    m_CustomSet1->SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    m_CustomSet1->SetForegroundColour(wxColour(wxT("rgb(56,75,101)")));
    wxFont m_CustomSet1Font = wxSystemSettings::GetFont(wxSYS_DEFAULT_GUI_FONT);
    m_CustomSet1Font.SetWeight(wxFONTWEIGHT_BOLD);
    m_CustomSet1->SetFont(m_CustomSet1Font);
    
    boxSizer398->Add(m_CustomSet1, 0, wxALL, 5);
    
    m_CustomSet2Border = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxBORDER_NONE);
    m_CustomSet2Border->SetBackgroundColour(wxColour(wxT("rgb(43,134,219)")));
    
    CustomSetSizer->Add(m_CustomSet2Border, 0, wxALL, 0);
    
    wxBoxSizer* boxSizer406 = new wxBoxSizer(wxVERTICAL);
    m_CustomSet2Border->SetSizer(boxSizer406);
    
    m_CustomSet2 = new SetPanel(m_CustomSet2Border, wxID_ANY, wxDefaultPosition, wxSize(300,135), wxBORDER_SIMPLE);
    m_CustomSet2->SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    m_CustomSet2->SetForegroundColour(wxColour(wxT("rgb(56,75,101)")));
    
    boxSizer406->Add(m_CustomSet2, 0, wxALL, 5);
    
    m_CustomSet3Border = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxBORDER_NONE);
    m_CustomSet3Border->SetBackgroundColour(wxColour(wxT("rgb(43,134,219)")));
    
    CustomSetSizer->Add(m_CustomSet3Border, 0, wxALL, 0);
    
    wxBoxSizer* boxSizer408 = new wxBoxSizer(wxVERTICAL);
    m_CustomSet3Border->SetSizer(boxSizer408);
    
    m_CustomSet3 = new SetPanel(m_CustomSet3Border, wxID_ANY, wxDefaultPosition, wxSize(300,135), wxBORDER_SIMPLE);
    m_CustomSet3->SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    m_CustomSet3->SetForegroundColour(wxColour(wxT("rgb(56,75,101)")));
    
    boxSizer408->Add(m_CustomSet3, 0, wxALL, 5);
    
    m_CustomSet4Border = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxBORDER_NONE);
    m_CustomSet4Border->SetBackgroundColour(wxColour(wxT("rgb(43,134,219)")));
    
    CustomSetSizer->Add(m_CustomSet4Border, 0, wxALL, 0);
    
    wxBoxSizer* boxSizer410 = new wxBoxSizer(wxVERTICAL);
    m_CustomSet4Border->SetSizer(boxSizer410);
    
    m_CustomSet4 = new SetPanel(m_CustomSet4Border, wxID_ANY, wxDefaultPosition, wxSize(300,135), wxBORDER_SIMPLE);
    m_CustomSet4->SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    m_CustomSet4->SetForegroundColour(wxColour(wxT("rgb(56,75,101)")));
    
    boxSizer410->Add(m_CustomSet4, 0, wxALL, 5);
    
    wxBoxSizer* boxSizer360 = new wxBoxSizer(wxVERTICAL);
    
    boxSizer356->Add(boxSizer360, 1, wxALL|wxEXPAND, 5);
    
    m_panel370 = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxBORDER_SIMPLE);
    m_panel370->SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    m_panel370->SetForegroundColour(wxColour(wxT("rgb(56,75,101)")));
    
    boxSizer360->Add(m_panel370, 0, wxALL, 5);
    
    wxBoxSizer* boxSizer374 = new wxBoxSizer(wxVERTICAL);
    m_panel370->SetSizer(boxSizer374);
    
    m_panel380 = new wxPanel(m_panel370, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxBORDER_SIMPLE);
    m_panel380->SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    m_panel380->SetForegroundColour(wxColour(wxT("rgb(56,75,101)")));
    
    boxSizer374->Add(m_panel380, 0, wxALL, 5);
    
    wxBoxSizer* boxSizer382 = new wxBoxSizer(wxVERTICAL);
    m_panel380->SetSizer(boxSizer382);
    
    m_PlaneSelect = new wxButton(m_panel380, wxID_ANY, _("SELECT AIRCRAFT"), wxDefaultPosition, wxSize(125,-1), wxBORDER_NONE);
    m_PlaneSelect->SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    m_PlaneSelect->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_PlaneSelectFont = wxSystemSettings::GetFont(wxSYS_DEFAULT_GUI_FONT);
    m_PlaneSelectFont.SetWeight(wxFONTWEIGHT_BOLD);
    m_PlaneSelect->SetFont(m_PlaneSelectFont);
    
    boxSizer382->Add(m_PlaneSelect, 0, wxALL, 1);
    
    m_panel384 = new wxPanel(m_panel370, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxBORDER_SIMPLE);
    m_panel384->SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    m_panel384->SetForegroundColour(wxColour(wxT("rgb(56,75,101)")));
    
    boxSizer374->Add(m_panel384, 0, wxALL, 5);
    
    wxBoxSizer* boxSizer388 = new wxBoxSizer(wxVERTICAL);
    m_panel384->SetSizer(boxSizer388);
    
    m_WeaponSelect = new wxButton(m_panel384, wxID_ANY, _("SELECT SPW"), wxDefaultPosition, wxSize(125,-1), wxBORDER_NONE);
    m_WeaponSelect->SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    m_WeaponSelect->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_WeaponSelectFont = wxSystemSettings::GetFont(wxSYS_DEFAULT_GUI_FONT);
    m_WeaponSelectFont.SetWeight(wxFONTWEIGHT_BOLD);
    m_WeaponSelect->SetFont(m_WeaponSelectFont);
    
    boxSizer388->Add(m_WeaponSelect, 0, wxALL, 1);
    
    m_panel386 = new wxPanel(m_panel370, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxBORDER_SIMPLE);
    m_panel386->SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    m_panel386->SetForegroundColour(wxColour(wxT("rgb(56,75,101)")));
    
    boxSizer374->Add(m_panel386, 0, wxALL, 5);
    
    wxBoxSizer* boxSizer392 = new wxBoxSizer(wxVERTICAL);
    m_panel386->SetSizer(boxSizer392);
    
    m_PartSelect = new wxButton(m_panel386, wxID_ANY, _("SELECT EQUIPMENT"), wxDefaultPosition, wxSize(125,-1), wxBORDER_NONE);
    m_PartSelect->SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    m_PartSelect->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_PartSelectFont = wxSystemSettings::GetFont(wxSYS_DEFAULT_GUI_FONT);
    m_PartSelectFont.SetWeight(wxFONTWEIGHT_BOLD);
    m_PartSelect->SetFont(m_PartSelectFont);
    
    boxSizer392->Add(m_PartSelect, 0, wxALL, 1);
    
    m_panel413 = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxBORDER_SIMPLE);
    m_panel413->SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    m_panel413->SetForegroundColour(wxColour(wxT("rgb(56,75,101)")));
    
    boxSizer360->Add(m_panel413, 0, wxALL|wxEXPAND, 5);
    
    wxGridSizer* gridSizer424 = new wxGridSizer(0, 2, 0, 0);
    m_panel413->SetSizer(gridSizer424);
    
    m_PlaneName = new wxStaticText(m_panel413, wxID_ANY, _("[ N/A ]"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_PlaneName->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_PlaneNameFont = wxSystemSettings::GetFont(wxSYS_DEFAULT_GUI_FONT);
    m_PlaneNameFont.SetWeight(wxFONTWEIGHT_BOLD);
    m_PlaneName->SetFont(m_PlaneNameFont);
    
    gridSizer424->Add(m_PlaneName, 0, wxALL, 5);
    
    m_PlaneIcon = new wxStaticBitmap(m_panel413, wxID_ANY, wxNullBitmap, wxDefaultPosition, wxSize(-1,-1), 0 );
    
    gridSizer424->Add(m_PlaneIcon, 0, wxALL|wxALIGN_RIGHT, 5);
    
    m_Cst = new wxStaticText(m_panel413, wxID_ANY, _("Cst: 0"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_Cst->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_CstFont = wxSystemSettings::GetFont(wxSYS_DEFAULT_GUI_FONT);
    m_CstFont.SetWeight(wxFONTWEIGHT_BOLD);
    m_Cst->SetFont(m_CstFont);
    
    gridSizer424->Add(m_Cst, 0, wxALL, 5);
    
    m_Level = new wxStaticText(m_panel413, wxID_ANY, _("Lv: 0"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_Level->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    wxFont m_LevelFont = wxSystemSettings::GetFont(wxSYS_DEFAULT_GUI_FONT);
    m_LevelFont.SetWeight(wxFONTWEIGHT_BOLD);
    m_Level->SetFont(m_LevelFont);
    
    gridSizer424->Add(m_Level, 0, wxALL|wxALIGN_RIGHT, 5);
    
    m_STATPanel = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxBORDER_SIMPLE);
    m_STATPanel->SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    m_STATPanel->SetForegroundColour(wxColour(wxT("rgb(56,75,101)")));
    wxFont m_STATPanelFont = wxSystemSettings::GetFont(wxSYS_DEFAULT_GUI_FONT);
    m_STATPanelFont.SetWeight(wxFONTWEIGHT_BOLD);
    m_STATPanel->SetFont(m_STATPanelFont);
    
    boxSizer360->Add(m_STATPanel, 0, wxALL, 5);
    
    wxBoxSizer* boxSizer444 = new wxBoxSizer(wxVERTICAL);
    m_STATPanel->SetSizer(boxSizer444);
    
    m_staticText446 = new wxStaticText(m_STATPanel, wxID_ANY, _("[ STATISTICS ]"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_staticText446->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    boxSizer444->Add(m_staticText446, 0, wxALL, 5);
    
    wxGridSizer* gridSizer448 = new wxGridSizer(0, 2, 0, 0);
    
    boxSizer444->Add(gridSizer448, 1, wxALL|wxEXPAND, 0);
    
    m_staticText450 = new wxStaticText(m_STATPanel, wxID_ANY, _("SPEED"), wxDefaultPosition, wxSize(-1,-1), wxALIGN_LEFT);
    m_staticText450->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    gridSizer448->Add(m_staticText450, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5);
    
    wxBoxSizer* boxSizer487 = new wxBoxSizer(wxHORIZONTAL);
    
    gridSizer448->Add(boxSizer487, 1, wxALL|wxEXPAND, 0);
    
    m_SpeedGrade = new wxStaticText(m_STATPanel, wxID_ANY, _("F⁻"), wxDefaultPosition, wxSize(18,18), wxALIGN_CENTRE);
    m_SpeedGrade->SetBackgroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    boxSizer487->Add(m_SpeedGrade, 0, wxALL, 5);
    
    m_SpeedBar = new wxStaticBitmap(m_STATPanel, wxID_ANY, wxNullBitmap, wxDefaultPosition, wxSize(150,18), 0 );
    
    boxSizer487->Add(m_SpeedBar, 0, wxALL, 5);
    
    m_staticText493 = new wxStaticText(m_STATPanel, wxID_ANY, _("MOBILITY"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_staticText493->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    gridSizer448->Add(m_staticText493, 0, wxALL, 5);
    
    wxBoxSizer* boxSizer495 = new wxBoxSizer(wxHORIZONTAL);
    
    gridSizer448->Add(boxSizer495, 1, wxALL|wxEXPAND, 0);
    
    m_MobilityGrade = new wxStaticText(m_STATPanel, wxID_ANY, _("F⁻"), wxDefaultPosition, wxSize(18,18), wxALIGN_CENTRE);
    m_MobilityGrade->SetBackgroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    boxSizer495->Add(m_MobilityGrade, 0, wxALL, 5);
    
    m_MobilityBar = new wxStaticBitmap(m_STATPanel, wxID_ANY, wxNullBitmap, wxDefaultPosition, wxSize(150,18), 0 );
    
    boxSizer495->Add(m_MobilityBar, 0, wxALL, 5);
    
    m_staticText497 = new wxStaticText(m_STATPanel, wxID_ANY, _("STABILITY"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_staticText497->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    gridSizer448->Add(m_staticText497, 0, wxALL, 5);
    
    wxBoxSizer* boxSizer499 = new wxBoxSizer(wxHORIZONTAL);
    
    gridSizer448->Add(boxSizer499, 1, wxALL|wxEXPAND, 0);
    
    m_StabilityGrade = new wxStaticText(m_STATPanel, wxID_ANY, _("F⁻"), wxDefaultPosition, wxSize(18,18), wxALIGN_CENTRE);
    m_StabilityGrade->SetBackgroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    boxSizer499->Add(m_StabilityGrade, 0, wxALL, 5);
    
    m_StabilityBar = new wxStaticBitmap(m_STATPanel, wxID_ANY, wxNullBitmap, wxDefaultPosition, wxSize(150,18), 0 );
    
    boxSizer499->Add(m_StabilityBar, 0, wxALL, 5);
    
    m_staticText501 = new wxStaticText(m_STATPanel, wxID_ANY, _("ATK DMG (AIR)"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_staticText501->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    gridSizer448->Add(m_staticText501, 0, wxALL, 5);
    
    wxBoxSizer* boxSizer503 = new wxBoxSizer(wxHORIZONTAL);
    
    gridSizer448->Add(boxSizer503, 1, wxALL|wxEXPAND, 0);
    
    m_AAGrade = new wxStaticText(m_STATPanel, wxID_ANY, _("F⁻"), wxDefaultPosition, wxSize(18,18), wxALIGN_CENTRE);
    m_AAGrade->SetBackgroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    boxSizer503->Add(m_AAGrade, 0, wxALL, 5);
    
    m_AABar = new wxStaticBitmap(m_STATPanel, wxID_ANY, wxNullBitmap, wxDefaultPosition, wxSize(150,18), 0 );
    
    boxSizer503->Add(m_AABar, 0, wxALL, 5);
    
    m_staticText505 = new wxStaticText(m_STATPanel, wxID_ANY, _("ATK DMG (GND)"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_staticText505->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    gridSizer448->Add(m_staticText505, 0, wxALL, 5);
    
    wxBoxSizer* boxSizer507 = new wxBoxSizer(wxHORIZONTAL);
    
    gridSizer448->Add(boxSizer507, 1, wxALL|wxEXPAND, 0);
    
    m_AGGrade = new wxStaticText(m_STATPanel, wxID_ANY, _("F⁻"), wxDefaultPosition, wxSize(18,18), wxALIGN_CENTRE);
    m_AGGrade->SetBackgroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    boxSizer507->Add(m_AGGrade, 0, wxALL, 5);
    
    m_AGBar = new wxStaticBitmap(m_STATPanel, wxID_ANY, wxNullBitmap, wxDefaultPosition, wxSize(150,18), 0 );
    
    boxSizer507->Add(m_AGBar, 0, wxALL, 5);
    
    m_staticText509 = new wxStaticText(m_STATPanel, wxID_ANY, _("DEFENSE"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_staticText509->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    gridSizer448->Add(m_staticText509, 0, wxALL, 5);
    
    wxBoxSizer* boxSizer511 = new wxBoxSizer(wxHORIZONTAL);
    
    gridSizer448->Add(boxSizer511, 1, wxALL|wxEXPAND, 0);
    
    m_DefenseGrade = new wxStaticText(m_STATPanel, wxID_ANY, _("F⁻"), wxDefaultPosition, wxSize(18,18), wxALIGN_CENTRE);
    m_DefenseGrade->SetBackgroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    boxSizer511->Add(m_DefenseGrade, 0, wxALL, 5);
    
    m_DefenseBar = new wxStaticBitmap(m_STATPanel, wxID_ANY, wxNullBitmap, wxDefaultPosition, wxSize(150,18), 0 );
    
    boxSizer511->Add(m_DefenseBar, 0, wxALL, 5);
    
    m_PARTSPanel = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxBORDER_SIMPLE);
    m_PARTSPanel->SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    m_PARTSPanel->SetForegroundColour(wxColour(wxT("rgb(56,75,101)")));
    wxFont m_PARTSPanelFont = wxSystemSettings::GetFont(wxSYS_DEFAULT_GUI_FONT);
    m_PARTSPanelFont.SetWeight(wxFONTWEIGHT_BOLD);
    m_PARTSPanel->SetFont(m_PARTSPanelFont);
    
    boxSizer360->Add(m_PARTSPanel, 0, wxALL|wxEXPAND, 5);
    
    wxFlexGridSizer* flexGridSizer524 = new wxFlexGridSizer(0, 2, 0, 0);
    flexGridSizer524->SetFlexibleDirection( wxBOTH );
    flexGridSizer524->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    m_PARTSPanel->SetSizer(flexGridSizer524);
    
    m_staticText454 = new wxStaticText(m_PARTSPanel, wxID_ANY, _("[ PARTS ]"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_staticText454->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    flexGridSizer524->Add(m_staticText454, 0, wxALL, 5);
    
    m_PartIcons = new wxStaticBitmap(m_PARTSPanel, wxID_ANY, wxNullBitmap, wxDefaultPosition, wxSize(-1,-1), 0 );
    
    flexGridSizer524->Add(m_PartIcons, 0, wxALL|wxALIGN_CENTER_HORIZONTAL, 5);
    
    m_staticText472 = new wxStaticText(m_PARTSPanel, wxID_ANY, _("BODY"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_staticText472->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    flexGridSizer524->Add(m_staticText472, 0, wxALL, 5);
    
    wxBoxSizer* boxSizer475 = new wxBoxSizer(wxHORIZONTAL);
    
    flexGridSizer524->Add(boxSizer475, 0, wxALL, 0);
    
    m_BODY = new wxStaticText(m_PARTSPanel, wxID_ANY, _("0/0"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_BODY->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    boxSizer475->Add(m_BODY, 0, wxALL|wxALIGN_RIGHT, 5);
    
    m_BODYSlots = new wxStaticBitmap(m_PARTSPanel, wxID_ANY, wxNullBitmap, wxDefaultPosition, wxSize(178,16), 0 );
    
    boxSizer475->Add(m_BODYSlots, 0, wxALL, 5);
    
    m_staticText477 = new wxStaticText(m_PARTSPanel, wxID_ANY, _("ARMS"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_staticText477->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    flexGridSizer524->Add(m_staticText477, 0, wxALL, 5);
    
    wxBoxSizer* boxSizer480 = new wxBoxSizer(wxHORIZONTAL);
    
    flexGridSizer524->Add(boxSizer480, 0, wxALL, 0);
    
    m_ARMS = new wxStaticText(m_PARTSPanel, wxID_ANY, _("0/0"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_ARMS->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    boxSizer480->Add(m_ARMS, 0, wxALL|wxALIGN_RIGHT, 5);
    
    m_ARMSSlots = new wxStaticBitmap(m_PARTSPanel, wxID_ANY, wxNullBitmap, wxDefaultPosition, wxSize(178,16), 0 );
    
    boxSizer480->Add(m_ARMSSlots, 0, wxALL, 5);
    
    m_staticText479 = new wxStaticText(m_PARTSPanel, wxID_ANY, _("MISC"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_staticText479->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    flexGridSizer524->Add(m_staticText479, 0, wxALL, 5);
    
    wxBoxSizer* boxSizer481 = new wxBoxSizer(wxHORIZONTAL);
    
    flexGridSizer524->Add(boxSizer481, 0, wxALL, 0);
    
    m_MISC = new wxStaticText(m_PARTSPanel, wxID_ANY, _("0/0"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_MISC->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    boxSizer481->Add(m_MISC, 0, wxALL|wxALIGN_RIGHT, 5);
    
    m_MISCSlots = new wxStaticBitmap(m_PARTSPanel, wxID_ANY, wxNullBitmap, wxDefaultPosition, wxSize(178,16), 0 );
    
    boxSizer481->Add(m_MISCSlots, 0, wxALL, 5);
    
    m_panel432 = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxBORDER_SIMPLE);
    m_panel432->SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    m_panel432->SetForegroundColour(wxColour(wxT("rgb(56,75,101)")));
    wxFont m_panel432Font = wxSystemSettings::GetFont(wxSYS_DEFAULT_GUI_FONT);
    m_panel432Font.SetWeight(wxFONTWEIGHT_BOLD);
    m_panel432->SetFont(m_panel432Font);
    
    boxSizer360->Add(m_panel432, 0, wxALL|wxEXPAND, 5);
    
    wxBoxSizer* boxSizer434 = new wxBoxSizer(wxVERTICAL);
    m_panel432->SetSizer(boxSizer434);
    
    m_staticText436 = new wxStaticText(m_panel432, wxID_ANY, _("[ NUMBER OF MISSILES ]"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_staticText436->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    boxSizer434->Add(m_staticText436, 0, wxALL, 5);
    
    m_SPWAmmo = new wxStaticText(m_panel432, wxID_ANY, _("0"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_SPWAmmo->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    boxSizer434->Add(m_SPWAmmo, 0, wxALL, 5);
    
    m_staticText440 = new wxStaticText(m_panel432, wxID_ANY, _("[ TYPE ]"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_staticText440->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    boxSizer434->Add(m_staticText440, 0, wxALL, 5);
    
    m_SPWType = new wxStaticText(m_panel432, wxID_ANY, _("N/A"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_SPWType->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    boxSizer434->Add(m_SPWType, 0, wxALL, 5);
    
    wxGridSizer* gridSizer529 = new wxGridSizer(0, 2, 0, 0);
    
    boxSizer434->Add(gridSizer529, 0, wxALL, 5);
    
    m_staticText526 = new wxStaticText(m_panel432, wxID_ANY, _("[ TDM VALUE ]"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_staticText526->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    gridSizer529->Add(m_staticText526, 0, wxALL, 5);
    
    m_staticText531 = new wxStaticText(m_panel432, wxID_ANY, _("INSTALL COST"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_staticText531->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    gridSizer529->Add(m_staticText531, 0, wxALL, 5);
    
    m_TDMScore = new wxStaticText(m_panel432, wxID_ANY, _("0"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_TDMScore->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    gridSizer529->Add(m_TDMScore, 0, wxALL, 5);
    
    m_InstallCost = new wxStaticText(m_panel432, wxID_ANY, _("0"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_InstallCost->SetForegroundColour(wxColour(wxT("rgb(153,172,202)")));
    
    gridSizer529->Add(m_InstallCost, 0, wxALL, 5);
    
    SetBackgroundColour(wxColour(wxT("rgb(24,47,75)")));
    SetSizeHints(600,600);
    if ( GetSizer() ) {
         GetSizer()->Fit(this);
    }
    Centre(wxBOTH);
    // Connect events
    this->Connect(wxEVT_CLOSE_WINDOW, wxCloseEventHandler(SetBuilderBaseClass::onClose), NULL, this);
    this->Connect(wxEVT_KEY_DOWN, wxKeyEventHandler(SetBuilderBaseClass::onKeyDown), NULL, this);
    m_savedefault->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SetBuilderBaseClass::onSaveDefault), NULL, this);
    m_clearsets->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SetBuilderBaseClass::onClearSets), NULL, this);
    m_savepng->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SetBuilderBaseClass::onSavePNG), NULL, this);
    m_PlaneSelect->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SetBuilderBaseClass::onPlaneSelect), NULL, this);
    m_WeaponSelect->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SetBuilderBaseClass::onSPWSelect), NULL, this);
    m_PartSelect->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SetBuilderBaseClass::onPartSelect), NULL, this);
    
}

SetBuilderBaseClass::~SetBuilderBaseClass()
{
    this->Disconnect(wxEVT_CLOSE_WINDOW, wxCloseEventHandler(SetBuilderBaseClass::onClose), NULL, this);
    this->Disconnect(wxEVT_KEY_DOWN, wxKeyEventHandler(SetBuilderBaseClass::onKeyDown), NULL, this);
    m_savedefault->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SetBuilderBaseClass::onSaveDefault), NULL, this);
    m_clearsets->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SetBuilderBaseClass::onClearSets), NULL, this);
    m_savepng->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SetBuilderBaseClass::onSavePNG), NULL, this);
    m_PlaneSelect->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SetBuilderBaseClass::onPlaneSelect), NULL, this);
    m_WeaponSelect->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SetBuilderBaseClass::onSPWSelect), NULL, this);
    m_PartSelect->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SetBuilderBaseClass::onPartSelect), NULL, this);
    
}

SpecialAircraftBaseClass::SpecialAircraftBaseClass(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxFrame(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxC9ED9InitBitmapResources();
        bBitmapLoaded = true;
    }
    
    m_toolbar308 = this->CreateToolBar(wxTB_FLAT, wxID_ANY);
    m_toolbar308->SetToolBitmapSize(wxSize(16,16));
    
    m_zoomin = new wxButton(m_toolbar308, wxID_ANY, _("Zoom In"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_toolbar308->AddControl(m_zoomin);
    
    m_zoomout = new wxButton(m_toolbar308, wxID_ANY, _("Zoom Out"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_toolbar308->AddControl(m_zoomout);
    
    m_savedata = new wxButton(m_toolbar308, wxID_ANY, _("Save Data"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_toolbar308->AddControl(m_savedata);
    
    m_savepng = new wxButton(m_toolbar308, wxID_ANY, _("Save PNG"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_toolbar308->AddControl(m_savepng);
    
    m_editmode = new wxToggleButton(m_toolbar308, wxID_ANY, _("Edit Mode"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_editmode->SetValue(false);
    m_toolbar308->AddControl(m_editmode);
    m_toolbar308->Realize();
    
    SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    SetSizeHints(500,300);
    if ( GetSizer() ) {
         GetSizer()->Fit(this);
    }
    Centre(wxBOTH);
    // Connect events
    this->Connect(wxEVT_CLOSE_WINDOW, wxCloseEventHandler(SpecialAircraftBaseClass::onClose), NULL, this);
    m_zoomin->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SpecialAircraftBaseClass::onZoomIn), NULL, this);
    m_zoomout->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SpecialAircraftBaseClass::onZoomOut), NULL, this);
    m_savedata->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SpecialAircraftBaseClass::onSaveData), NULL, this);
    m_savepng->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SpecialAircraftBaseClass::onSavePNG), NULL, this);
    m_editmode->Connect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(SpecialAircraftBaseClass::onEdit), NULL, this);
    
}

SpecialAircraftBaseClass::~SpecialAircraftBaseClass()
{
    this->Disconnect(wxEVT_CLOSE_WINDOW, wxCloseEventHandler(SpecialAircraftBaseClass::onClose), NULL, this);
    m_zoomin->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SpecialAircraftBaseClass::onZoomIn), NULL, this);
    m_zoomout->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SpecialAircraftBaseClass::onZoomOut), NULL, this);
    m_savedata->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SpecialAircraftBaseClass::onSaveData), NULL, this);
    m_savepng->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SpecialAircraftBaseClass::onSavePNG), NULL, this);
    m_editmode->Disconnect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(SpecialAircraftBaseClass::onEdit), NULL, this);
    
}

SpecialWeaponBaseClass::SpecialWeaponBaseClass(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxFrame(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxC9ED9InitBitmapResources();
        bBitmapLoaded = true;
    }
    
    m_toolbar322 = this->CreateToolBar(wxTB_FLAT, wxID_ANY);
    m_toolbar322->SetToolBitmapSize(wxSize(16,16));
    
    m_zoomin = new wxButton(m_toolbar322, wxID_ANY, _("Zoom In"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_toolbar322->AddControl(m_zoomin);
    
    m_zoomout = new wxButton(m_toolbar322, wxID_ANY, _("Zoom Out"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_toolbar322->AddControl(m_zoomout);
    
    m_savedata = new wxButton(m_toolbar322, wxID_ANY, _("Save Data"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_toolbar322->AddControl(m_savedata);
    
    m_savepng = new wxButton(m_toolbar322, wxID_ANY, _("Save PNG"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_toolbar322->AddControl(m_savepng);
    
    m_editmode = new wxToggleButton(m_toolbar322, wxID_ANY, _("Edit Mode"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_editmode->SetValue(false);
    m_toolbar322->AddControl(m_editmode);
    m_toolbar322->Realize();
    
    SetBackgroundColour(wxColour(wxT("rgb(2,11,26)")));
    SetSizeHints(500,300);
    if ( GetSizer() ) {
         GetSizer()->Fit(this);
    }
    Centre(wxBOTH);
    // Connect events
    this->Connect(wxEVT_CLOSE_WINDOW, wxCloseEventHandler(SpecialWeaponBaseClass::onClose), NULL, this);
    m_zoomin->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SpecialWeaponBaseClass::onZoomIn), NULL, this);
    m_zoomout->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SpecialWeaponBaseClass::onZoomOut), NULL, this);
    m_savedata->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SpecialWeaponBaseClass::onSaveData), NULL, this);
    m_savepng->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SpecialWeaponBaseClass::onSavePNG), NULL, this);
    m_editmode->Connect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(SpecialWeaponBaseClass::onEdit), NULL, this);
    
}

SpecialWeaponBaseClass::~SpecialWeaponBaseClass()
{
    this->Disconnect(wxEVT_CLOSE_WINDOW, wxCloseEventHandler(SpecialWeaponBaseClass::onClose), NULL, this);
    m_zoomin->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SpecialWeaponBaseClass::onZoomIn), NULL, this);
    m_zoomout->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SpecialWeaponBaseClass::onZoomOut), NULL, this);
    m_savedata->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SpecialWeaponBaseClass::onSaveData), NULL, this);
    m_savepng->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SpecialWeaponBaseClass::onSavePNG), NULL, this);
    m_editmode->Disconnect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(SpecialWeaponBaseClass::onEdit), NULL, this);
    
}
