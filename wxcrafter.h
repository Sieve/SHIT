//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: wxcrafter.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef WXCRAFTER_BASE_CLASSES_H
#define WXCRAFTER_BASE_CLASSES_H

#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/frame.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/panel.h>
#include <wx/listbox.h>
#include <wx/checkbox.h>
#include <wx/radiobut.h>
#include <wx/stattext.h>
#include <wx/choice.h>
#include <wx/arrstr.h>
#include <wx/spinctrl.h>
#include <wx/treectrl.h>
#include <wx/menu.h>
#include <wx/toolbar.h>
#include <wx/tglbtn.h>
#include <wx/button.h>
#include "SetPanel.h"
#include <wx/statbmp.h>

class MainFrameBaseClass : public wxFrame
{
protected:
    wxPanel* m_SelectionPanel;
    wxListBox* m_PlaneSelector;
    wxCheckBox* m_ShowEvent;
    wxCheckBox* m_ShowNonEvent;
    wxRadioButton* m_Descending;
    wxStaticText* m_descending;
    wxRadioButton* m_Ascending;
    wxStaticText* m_ascending;
    wxChoice* m_FilterOptionSelector;
    wxChoice* m_FilterOptionSubSelector;
    wxStaticText* m_level1;
    wxSpinCtrl* m_FilterLevel;
    wxPanel* m_Tree;
    wxTreeCtrl* m_TreeSelector;
    wxPanel* m_MainPlaneDisplay;
    wxStaticText* m_PlaneName;
    wxStaticText* m_level2;
    wxSpinCtrl* m_LevelSelector;
    wxStaticText* m_cst;
    wxStaticText* m_Cst;
    wxStaticText* m_cost;
    wxStaticText* m_Cost;
    wxPanel* m_StatDisplay;
    wxStaticText* m_statistics;
    wxStaticText* m_speed;
    wxStaticText* m_SpeedGrade;
    wxPanel* m_SpeedBar;
    wxStaticText* m_mobility;
    wxStaticText* m_MobilityGrade;
    wxPanel* m_MobilityBar;
    wxStaticText* m_stability;
    wxStaticText* m_StabilityGrade;
    wxPanel* m_StabilityBar;
    wxStaticText* m_aa;
    wxStaticText* m_AAGrade;
    wxPanel* m_AABar;
    wxStaticText* m_ag;
    wxStaticText* m_AGGrade;
    wxPanel* m_AGBar;
    wxStaticText* m_defense;
    wxStaticText* m_DefenseGrade;
    wxPanel* m_DefenseBar;
    wxPanel* m_Parts;
    wxStaticText* m_parts;
    wxStaticText* m_body;
    wxStaticText* m_BODYSlots;
    wxPanel* m_BODYBar;
    wxStaticText* m_arms;
    wxStaticText* m_ARMSSlots;
    wxPanel* m_ARMSBar;
    wxStaticText* m_misc;
    wxStaticText* m_MISCSlots;
    wxPanel* m_MISCBar;
    wxPanel* m_Weapons;
    wxStaticText* m_weapons;
    wxStaticText* m_GUN;
    wxStaticText* m_staticText17811;
    wxStaticText* m_GUNAmmo;
    wxStaticText* m_MSL;
    wxStaticText* m_staticText178;
    wxStaticText* m_MSLAmmo;
    wxStaticText* m_SPW1Name;
    wxStaticText* m_staticText192;
    wxStaticText* m_SPW1Ammo;
    wxStaticText* m_SPW2Name;
    wxStaticText* m_staticText19215;
    wxStaticText* m_SPW2Ammo;
    wxStaticText* m_SPW3Name;
    wxStaticText* m_staticText1921519;
    wxStaticText* m_SPW3Ammo;
    wxMenuBar* m_menuBar;
    wxMenu* m_name6;
    wxMenuItem* m_menuItem7;
    wxMenu* m_name8;
    wxMenuItem* m_menuItem9;
    wxToolBar* m_mainToolbar;
    wxToggleButton* m_FilterToggle;
    wxButton* m_SetBuilderOpen;
    wxButton* m_TreeOpen;
    wxButton* m_SpecialAircraftOpen;
    wxButton* m_SpecialWeaponsOpen;

protected:
    virtual void onClose(wxCloseEvent& event) { event.Skip(); }
    virtual void onPlaneSelected(wxCommandEvent& event) { event.Skip(); }
    virtual void onEventSort(wxCommandEvent& event) { event.Skip(); }
    virtual void onNonEventSort(wxCommandEvent& event) { event.Skip(); }
    virtual void onDescendingClicked(wxCommandEvent& event) { event.Skip(); }
    virtual void onAscendingClicked(wxCommandEvent& event) { event.Skip(); }
    virtual void onFilterOptionChanged(wxCommandEvent& event) { event.Skip(); }
    virtual void onFilterSubOptionChanged(wxCommandEvent& event) { event.Skip(); }
    virtual void onFilterLevelUpdated(wxSpinEvent& event) { event.Skip(); }
    virtual void TreeChanged(wxTreeEvent& event) { event.Skip(); }
    virtual void TreeChanging(wxTreeEvent& event) { event.Skip(); }
    virtual void CollapseNodes(wxTreeEvent& event) { event.Skip(); }
    virtual void onLevelChanged(wxSpinEvent& event) { event.Skip(); }
    virtual void OnExit(wxCommandEvent& event) { event.Skip(); }
    virtual void OnAbout(wxCommandEvent& event) { event.Skip(); }
    virtual void onFilterToggle(wxCommandEvent& event) { event.Skip(); }
    virtual void onSetBuilderOpen(wxCommandEvent& event) { event.Skip(); }
    virtual void onTreeOpen(wxCommandEvent& event) { event.Skip(); }
    virtual void onSpecialAircraftOpen(wxCommandEvent& event) { event.Skip(); }
    virtual void onSpecialWeaponsOpen(wxCommandEvent& event) { event.Skip(); }

public:
    MainFrameBaseClass(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Sieve's Helpful Infinity Tool"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxCAPTION|wxMINIMIZE_BOX|wxSYSTEM_MENU|wxCLOSE_BOX);
    virtual ~MainFrameBaseClass();
};


class ResearchTreeBaseClass : public wxFrame
{
protected:
    wxToolBar* m_toolbar290;
    wxButton* m_zoomin;
    wxButton* m_zoomout;
    wxButton* m_savedata;
    wxButton* m_savepng;
    wxToggleButton* m_editmode;

protected:
    virtual void onClose(wxCloseEvent& event) { event.Skip(); }
    virtual void onZoomIn(wxCommandEvent& event) { event.Skip(); }
    virtual void onZoomOut(wxCommandEvent& event) { event.Skip(); }
    virtual void onSaveData(wxCommandEvent& event) { event.Skip(); }
    virtual void onSavePNG(wxCommandEvent& event) { event.Skip(); }
    virtual void onEdit(wxCommandEvent& event) { event.Skip(); }

public:
    ResearchTreeBaseClass(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Research Tree"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,300), long style = wxDEFAULT_FRAME_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxCLOSE_BOX|wxALWAYS_SHOW_SB);
    virtual ~ResearchTreeBaseClass();
};


class SetBuilderBaseClass : public wxFrame
{
protected:
    wxToolBar* m_toolbar306;
    wxButton* m_savedefault;
    wxButton* m_clearsets;
    wxButton* m_savepng;
    wxPanel* m_CustomSet1Border;
    SetPanel* m_CustomSet1;
    wxPanel* m_CustomSet2Border;
    SetPanel* m_CustomSet2;
    wxPanel* m_CustomSet3Border;
    SetPanel* m_CustomSet3;
    wxPanel* m_CustomSet4Border;
    SetPanel* m_CustomSet4;
    wxPanel* m_panel370;
    wxPanel* m_panel380;
    wxButton* m_PlaneSelect;
    wxPanel* m_panel384;
    wxButton* m_WeaponSelect;
    wxPanel* m_panel386;
    wxButton* m_PartSelect;
    wxPanel* m_panel413;
    wxStaticText* m_PlaneName;
    wxStaticBitmap* m_PlaneIcon;
    wxStaticText* m_Cst;
    wxStaticText* m_Level;
    wxPanel* m_STATPanel;
    wxStaticText* m_staticText446;
    wxStaticText* m_staticText450;
    wxStaticText* m_SpeedGrade;
    wxStaticBitmap* m_SpeedBar;
    wxStaticText* m_staticText493;
    wxStaticText* m_MobilityGrade;
    wxStaticBitmap* m_MobilityBar;
    wxStaticText* m_staticText497;
    wxStaticText* m_StabilityGrade;
    wxStaticBitmap* m_StabilityBar;
    wxStaticText* m_staticText501;
    wxStaticText* m_AAGrade;
    wxStaticBitmap* m_AABar;
    wxStaticText* m_staticText505;
    wxStaticText* m_AGGrade;
    wxStaticBitmap* m_AGBar;
    wxStaticText* m_staticText509;
    wxStaticText* m_DefenseGrade;
    wxStaticBitmap* m_DefenseBar;
    wxPanel* m_PARTSPanel;
    wxStaticText* m_staticText454;
    wxStaticBitmap* m_PartIcons;
    wxStaticText* m_staticText472;
    wxStaticText* m_BODY;
    wxStaticBitmap* m_BODYSlots;
    wxStaticText* m_staticText477;
    wxStaticText* m_ARMS;
    wxStaticBitmap* m_ARMSSlots;
    wxStaticText* m_staticText479;
    wxStaticText* m_MISC;
    wxStaticBitmap* m_MISCSlots;
    wxPanel* m_panel432;
    wxStaticText* m_staticText436;
    wxStaticText* m_SPWAmmo;
    wxStaticText* m_staticText440;
    wxStaticText* m_SPWType;
    wxStaticText* m_staticText526;
    wxStaticText* m_staticText531;
    wxStaticText* m_TDMScore;
    wxStaticText* m_InstallCost;

protected:
    virtual void onClose(wxCloseEvent& event) { event.Skip(); }
    virtual void onKeyDown(wxKeyEvent& event) { event.Skip(); }
    virtual void onSaveDefault(wxCommandEvent& event) { event.Skip(); }
    virtual void onClearSets(wxCommandEvent& event) { event.Skip(); }
    virtual void onSavePNG(wxCommandEvent& event) { event.Skip(); }
    virtual void onPlaneSelect(wxCommandEvent& event) { event.Skip(); }
    virtual void onSPWSelect(wxCommandEvent& event) { event.Skip(); }
    virtual void onPartSelect(wxCommandEvent& event) { event.Skip(); }

public:
    SetBuilderBaseClass(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Set Builder"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(600,600), long style = wxDEFAULT_FRAME_STYLE|wxMINIMIZE_BOX|wxCLOSE_BOX|wxWANTS_CHARS);
    virtual ~SetBuilderBaseClass();
};


class SpecialAircraftBaseClass : public wxFrame
{
protected:
    wxToolBar* m_toolbar308;
    wxButton* m_zoomin;
    wxButton* m_zoomout;
    wxButton* m_savedata;
    wxButton* m_savepng;
    wxToggleButton* m_editmode;

protected:
    virtual void onClose(wxCloseEvent& event) { event.Skip(); }
    virtual void onZoomIn(wxCommandEvent& event) { event.Skip(); }
    virtual void onZoomOut(wxCommandEvent& event) { event.Skip(); }
    virtual void onSaveData(wxCommandEvent& event) { event.Skip(); }
    virtual void onSavePNG(wxCommandEvent& event) { event.Skip(); }
    virtual void onEdit(wxCommandEvent& event) { event.Skip(); }

public:
    SpecialAircraftBaseClass(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Special Aircraft"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,300), long style = wxDEFAULT_FRAME_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxCLOSE_BOX|wxALWAYS_SHOW_SB);
    virtual ~SpecialAircraftBaseClass();
};


class SpecialWeaponBaseClass : public wxFrame
{
protected:
    wxToolBar* m_toolbar322;
    wxButton* m_zoomin;
    wxButton* m_zoomout;
    wxButton* m_savedata;
    wxButton* m_savepng;
    wxToggleButton* m_editmode;

protected:
    virtual void onClose(wxCloseEvent& event) { event.Skip(); }
    virtual void onZoomIn(wxCommandEvent& event) { event.Skip(); }
    virtual void onZoomOut(wxCommandEvent& event) { event.Skip(); }
    virtual void onSaveData(wxCommandEvent& event) { event.Skip(); }
    virtual void onSavePNG(wxCommandEvent& event) { event.Skip(); }
    virtual void onEdit(wxCommandEvent& event) { event.Skip(); }

public:
    SpecialWeaponBaseClass(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("SpecialWeapon"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,300), long style = wxDEFAULT_FRAME_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxCLOSE_BOX|wxALWAYS_SHOW_SB);
    virtual ~SpecialWeaponBaseClass();
};

#endif
